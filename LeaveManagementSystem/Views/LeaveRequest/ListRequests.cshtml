@using LeaveManagementSystem.Services.LeaveRequests
@model EmployeeLeaveRequestListVM
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	ViewData["Title"] = "View Leave Requests";
	string GetStatusClass(LeaveRequestStatusEnum status) => status switch
	{
		LeaveRequestStatusEnum.Approved => "success",
		LeaveRequestStatusEnum.Rejected => "danger",
		LeaveRequestStatusEnum.Pending => "warning",
		LeaveRequestStatusEnum.Cancelled => "dark",
		_ => "secondary"
	};
}
<h1>Admin Leave Requests View</h1>
<div class="row">
	<div class="col">
		<div class="card">
			<div class="card-body text-center">
				<h1 class="card-title text-primary">@Model.TotalRequests</h1>
				<h5 class="card-text">@Html.DisplayNameFor(model => model.TotalRequests)</h5>
			</div>
		</div>
	</div>
	<div class="col">
		<div class="card">
			<div class="card-body text-center">
				<h1 class="card-title text-success">@Model.ApprovedRequests</h1>
				<h5 class="card-text">@Html.DisplayNameFor(model => model.ApprovedRequests)</h5>
			</div>
		</div>
	</div>
	<div class="col">
		<div class="card">
			<div class="card-body text-center">
				<h1 class="card-title text-warning">@Model.PendingRequests</h1>
				<h5 class="card-text">@Html.DisplayNameFor(model => model.PendingRequests)</h5>
			</div>
		</div>
	</div>
	<div class="col">
		<div class="card">
			<div class="card-body text-center">
				<h1 class="card-title text-danger">@Model.RejectedRequests</h1>
				<h5 class="card-text">@Html.DisplayNameFor(model => model.RejectedRequests)</h5>
			</div>
		</div>
	</div>
</div>
@if (Model.LeaveRequests.Count == 0)
{
	<div class="alert alert-info">
		<strong>No leave requests found.</strong>
	</div>
}
else
{
	<hr />
	<h2> Leave Requests </h2>
	<hr />
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.LeaveRequests[0].LeaveType)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.LeaveRequests[0].StartDate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.LeaveRequests[0].EndDate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.LeaveRequests[0].NumberOfDays)
				</th>
				<th>
					Employee Name
				</th>
				<th>
					@Html.DisplayNameFor(model => model.LeaveRequests[0].Employee.Email)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.LeaveRequests[0].LeaveRequestStatus)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.LeaveRequests)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.LeaveType)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.StartDate)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.EndDate)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.NumberOfDays)
					</td>
					<td>
						@($"{item.Employee.FirstName} {item.Employee.LastName}")
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Employee.Email)
					</td>
					<td>
						<span class="badge rounded-pill bg-@GetStatusClass(item.LeaveRequestStatus)">@item.LeaveRequestStatus.ToString()</span>
					</td>
					<td>
						@if (item.LeaveRequestStatus == LeaveRequestStatusEnum.Pending)
						{
							<a asp-controller="LeaveRequest" asp-action="Review" asp-route-leaveRequestId="@item.LeaveRequestID" class="btn btn-primary">Review</a>
						}
					</td>
				</tr>
			}
		</tbody>
	</table>
}